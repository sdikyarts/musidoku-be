# Generated by Django 5.2.4 on 2025-07-30 13:58

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artists',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('artist_type', models.CharField(choices=[('Solo', 'Solo'), ('Group', 'Group')], max_length=10)),
                ('origin_country', models.CharField(max_length=2)),
                ('debut_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)])),
                ('spotify_id', models.CharField(max_length=22)),
                ('spotify_primary_genre', models.CharField(max_length=100)),
                ('image', models.URLField(blank=True, null=True)),
                ('uses_stage_name', models.BooleanField(blank=True, null=True)),
                ('has_grammy_win', models.BooleanField(default=False)),
                ('has_hot100_entry', models.BooleanField(default=False)),
                ('is_deceased', models.BooleanField(blank=True, null=True)),
                ('is_disbanded', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Artist',
                'verbose_name_plural': 'Artists',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('category_type', models.CharField(choices=[('geographic', 'Geographic'), ('temporal', 'Temporal'), ('genre', 'Genre'), ('achievement', 'Achievement'), ('attribute', 'Attribute'), ('label', 'Label'), ('other', 'Other')], max_length=20)),
                ('validation_field', models.CharField(max_length=50)),
                ('validation_value', models.CharField(blank=True, max_length=100, null=True)),
                ('validation_logic', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Labels',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('parent_company', models.CharField(blank=True, max_length=255, null=True)),
                ('founded_year', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('is_major', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Albums',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('peak_chart_pos', models.IntegerField(blank=True, null=True)),
                ('has_number_one', models.BooleanField(default=False)),
                ('is_collab', models.BooleanField(default=False)),
                ('spotify_id', models.CharField(blank=True, max_length=22, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('primary_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='albums', to='main.artists')),
            ],
        ),
        migrations.CreateModel(
            name='Puzzle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('puzzle_date', models.DateField(unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category_col_1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='col1_puzzles', to='main.categories')),
                ('category_col_2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='col2_puzzles', to='main.categories')),
                ('category_col_3', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='col3_puzzles', to='main.categories')),
                ('category_row_1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='row1_puzzles', to='main.categories')),
                ('category_row_2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='row2_puzzles', to='main.categories')),
                ('category_row_3', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='row3_puzzles', to='main.categories')),
                ('creator_pick_1_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick_1_1', to='main.artists')),
                ('creator_pick_1_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick_1_2', to='main.artists')),
                ('creator_pick_1_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick_1_3', to='main.artists')),
                ('creator_pick_2_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick_2_1', to='main.artists')),
                ('creator_pick_2_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick_2_2', to='main.artists')),
                ('creator_pick_2_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick_2_3', to='main.artists')),
                ('creator_pick_3_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick_3_1', to='main.artists')),
                ('creator_pick_3_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick_3_2', to='main.artists')),
                ('creator_pick_3_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick_3_3', to='main.artists')),
            ],
        ),
        migrations.CreateModel(
            name='AlbumCollabs',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collabs', to='main.albums')),
                ('collab_artist_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collab_albums', to='main.artists')),
            ],
            options={
                'unique_together': {('album', 'collab_artist_id')},
            },
        ),
        migrations.CreateModel(
            name='ArtistLabels',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='label_relationships', to='main.artists')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_relationships', to='main.labels')),
            ],
            options={
                'unique_together': {('artist', 'label')},
            },
        ),
        migrations.CreateModel(
            name='GameSubmission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=255)),
                ('cell_index', models.CharField(max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('selected_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.artists')),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='main.puzzle')),
            ],
            options={
                'unique_together': {('user_id', 'puzzle', 'selected_artist')},
            },
        ),
    ]
